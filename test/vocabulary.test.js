import test from 'node:test';
import assert from 'node:assert';

import { NahuatlParser } from '../src/index.js';

const parser = new NahuatlParser();

test('Random vocabulary', () => {
  assert.strictEqual(JSON.stringify(parser.analyze('tamolnamacac')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"t","details":{"morpheme":"t","type":"prefix","role":"subject","person":"first","number":"plural","english":"we"}},{"morpheme":"amol","details":{"morpheme":"amol","type":"noun_stem","english":"soap","countable":true,"animate":false}},{"morpheme":"namacac","details":{"morpheme":"namacac","type":"noun_stem","english":"seller","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"we are a soap-seller"},{"morphemes":[{"morpheme":"t","details":{"morpheme":"t","type":"prefix","role":"subject","person":"second","number":"singular","english":"you (sg)"}},{"morpheme":"amol","details":{"morpheme":"amol","type":"noun_stem","english":"soap","countable":true,"animate":false}},{"morpheme":"namacac","details":{"morpheme":"namacac","type":"noun_stem","english":"seller","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"you (sg) are a soap-seller"},{"morphemes":[{"morpheme":"t","details":{"morpheme":"t","type":"prefix","role":"possessive","person":"first","number":"plural","english":"our","usedWith":"noun"}},{"morpheme":"amol","details":{"morpheme":"amol","type":"noun_stem","english":"soap","countable":true,"animate":false}},{"morpheme":"namacac","details":{"morpheme":"namacac","type":"noun_stem","english":"seller","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"(it is) our soap-seller"}]}', 'tamolnacac');
  assert.strictEqual(JSON.stringify(parser.analyze('tamol')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"t","details":{"morpheme":"t","type":"prefix","role":"possessive","person":"first","number":"plural","english":"our","usedWith":"noun"}},{"morpheme":"amol","details":{"morpheme":"amol","type":"noun_stem","english":"soap","countable":true,"animate":false}}],"englishTranslation":"(it is) our soap"}]}', 'tamol');
  assert.strictEqual(JSON.stringify(parser.analyze('nenamacac')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"n","details":{"morpheme":"n","type":"prefix","role":"subject","person":"first","number":"singular","english":"I"}},{"morpheme":"e","details":{"morpheme":"e","type":"noun_stem","english":"bean","countable":true,"animate":false}},{"morpheme":"namacac","details":{"morpheme":"namacac","type":"noun_stem","english":"seller","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"I am a bean-seller"},{"morphemes":[{"morpheme":"n","details":{"morpheme":"n","type":"prefix","role":"possessive","person":"first","number":"singular","english":"my","usedWith":"noun"}},{"morpheme":"e","details":{"morpheme":"e","type":"noun_stem","english":"bean","countable":true,"animate":false}},{"morpheme":"namacac","details":{"morpheme":"namacac","type":"noun_stem","english":"seller","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"(it is) my bean-seller"}]}', 'nenamacac');
  assert.strictEqual(JSON.stringify(parser.analyze('mepahuax')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"m","details":{"morpheme":"m","type":"prefix","role":"possessive","person":"second","number":"singular","english":"your (sg)","usedWith":"noun"}},{"morpheme":"e","details":{"morpheme":"e","type":"noun_stem","english":"bean","countable":true,"animate":false}},{"morpheme":"pahuax","details":{"morpheme":"pahuax","type":"noun_stem","english":"cooked","countable":true,"animate":false}}],"englishTranslation":"(it is) your (sg) bean-cooked"}]}', 'mepahuax');
  assert.strictEqual(JSON.stringify(parser.analyze('toquichtli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"t","details":{"morpheme":"t","type":"prefix","role":"subject","person":"second","number":"singular","english":"you (sg)"}},{"morpheme":"oquich","details":{"morpheme":"oquich","type":"noun_stem","english":"man","englishPlural":"men","countable":true,"animate":true}},{"morpheme":"tli","details":{"morpheme":"tli","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"you (sg) are a man"},{"morphemes":[{"morpheme":"t","details":{"morpheme":"t","type":"prefix","role":"possessive","person":"first","number":"plural","english":"our","usedWith":"noun"}},{"morpheme":"oquich","details":{"morpheme":"oquich","type":"noun_stem","english":"man","englishPlural":"men","countable":true,"animate":true}},{"morpheme":"tli","details":{"morpheme":"tli","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is) our man"}]}', 'toquichtli');
  assert.strictEqual(JSON.stringify(parser.analyze('amoquichtequiuh')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"am","details":{"morpheme":"am","type":"prefix","role":"possessive","person":"second","number":"plural","english":"your (pl)","usedWith":"noun"}},{"morpheme":"oquich","details":{"morpheme":"oquich","type":"noun_stem","english":"man","englishPlural":"men","countable":true,"animate":true}},{"morpheme":"tequi","details":{"morpheme":"tequi","type":"noun_stem","english":"work","countable":false,"animate":false}},{"morpheme":"uh","details":{"morpheme":"uh","type":"suffix","category":"possessive"}}],"englishTranslation":"(it is) your (pl) man-work"}]}', 'amoquichtequiuh');
  assert.strictEqual(JSON.stringify(parser.analyze('nichpochtli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"n","details":{"morpheme":"n","type":"prefix","role":"subject","person":"first","number":"singular","english":"I"}},{"morpheme":"ichpoch","details":{"morpheme":"ichpoch","type":"noun_stem","english":"girl","countable":true,"animate":true}},{"morpheme":"tli","details":{"morpheme":"tli","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"I am a girl"}]}', 'nichpochtli');
  assert.strictEqual(JSON.stringify(parser.analyze('iacal')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"i","details":{"morpheme":"i","type":"prefix","role":"possessive","person":"third","number":"singular","english":"his/her/its","usedWith":"noun"}},{"morpheme":"acal","details":{"morpheme":"acal","type":"noun_stem","english":"boat","countable":true,"animate":false}}],"englishTranslation":"(it is) his/her/its boat"}]}', '');
  assert.strictEqual(JSON.stringify(parser.analyze('tlaittalli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tla","details":{"morpheme":"tla","type":"prefix","role":"object","impliesSomething":true}},{"morpheme":"itta","details":{"morpheme":"itta","type":"verb_stem","english":"see","past":"saw","pp":"seen"}},{"morpheme":"lli","details":{"morpheme":"lli","type":"suffix","category":"participle","nominalizing":true,"countable":true}}],"englishTranslation":"(it is) something seen"}]}', 'tlaittalli');
  assert.strictEqual(JSON.stringify(parser.analyze('tocihuaxochitl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"to","details":{"morpheme":"to","type":"prefix","role":"possessive","person":"first","number":"plural","english":"our","usedWith":"noun"}},{"morpheme":"cihua","details":{"morpheme":"cihua","type":"noun_stem","english":"woman","englishPlural":"women","countable":true,"animate":true}},{"morpheme":"xochi","details":{"morpheme":"xochi","type":"noun_stem","english":"flower","countable":true,"animate":false}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is) our woman-flower"}]}', 'tocihuaxochitl');
  assert.strictEqual(JSON.stringify(parser.analyze('cua')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"cua","details":{"morpheme":"cua","type":"verb_stem","english":"eat","past":"ate","pp":"eaten"}}],"englishTranslation":"he/she/it eats"}]}', 'cua');
  assert.strictEqual(JSON.stringify(parser.analyze('tlacua')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tla","details":{"morpheme":"tla","type":"prefix","role":"object","impliesSomething":true}},{"morpheme":"cua","details":{"morpheme":"cua","type":"verb_stem","english":"eat","past":"ate","pp":"eaten"}}],"englishTranslation":"he/she/it eats something"}]}', 'tlacua');
  assert.strictEqual(JSON.stringify(parser.analyze('nicua')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ni","details":{"morpheme":"ni","type":"prefix","role":"subject","person":"first","number":"singular","english":"I"}},{"morpheme":"cua","details":{"morpheme":"cua","type":"verb_stem","english":"eat","past":"ate","pp":"eaten"}}],"englishTranslation":"I eat"}]}', 'nicua');
  assert.strictEqual(JSON.stringify(parser.analyze('nitlacua')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ni","details":{"morpheme":"ni","type":"prefix","role":"subject","person":"first","number":"singular","english":"I"}},{"morpheme":"tla","details":{"morpheme":"tla","type":"prefix","role":"object","impliesSomething":true}},{"morpheme":"cua","details":{"morpheme":"cua","type":"verb_stem","english":"eat","past":"ate","pp":"eaten"}}],"englishTranslation":"I eat something"}]}', 'nitlacua');
});

// Many of the words in the test set for modern vocabulary come from the second edition of Learn Nahuatl by Yan Garcia
test('Modern vocabulary, set 1', () => {
  //assert.strictEqual(JSON.stringify(parser.analyze("atl")), ``, "atl");
  assert.strictEqual(JSON.stringify(parser.analyze('etl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"e","details":{"morpheme":"e","type":"noun_stem","english":"bean","countable":true,"animate":false}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) bean"}]}', 'etl');
  assert.strictEqual(JSON.stringify(parser.analyze('ichcatl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ichca","details":{"morpheme":"ichca","type":"noun_stem","english":"sheep","englishPlural":"sheep","countable":true,"animate":true}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) sheep"}]}', 'ichcatl');
  assert.strictEqual(JSON.stringify(parser.analyze('ohtli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"oh","details":{"morpheme":"oh","type":"noun_stem","english":"path","countable":true,"animate":false}},{"morpheme":"tli","details":{"morpheme":"tli","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) path"}]}', 'ohtli');
  assert.strictEqual(JSON.stringify(parser.analyze('pamitl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"pami","details":{"morpheme":"pami","type":"noun_stem","english":"banner","countable":true,"animate":false}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) banner"}]}', 'pamitl');
  assert.strictEqual(JSON.stringify(parser.analyze('tocatl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"toca","details":{"morpheme":"toca","type":"noun_stem","english":"spider","countable":true,"animate":true}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) spider"}]}', 'tocatl');
  assert.strictEqual(JSON.stringify(parser.analyze('cacaoh')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"cacaoh","details":{"morpheme":"cacaoh","type":"noun_stem","english":"cacao","countable":false,"animate":false,"absolutiveSuffix":false}}],"englishTranslation":"(it is) cacao"}]}', 'cacaoh');
  assert.strictEqual(JSON.stringify(parser.analyze('lemeni')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"lemeni","details":{"morpheme":"lemeni","type":"verb_stem","english":"burn"}}],"englishTranslation":"he/she/it burns"}]}', 'lemeni');
  assert.strictEqual(JSON.stringify(parser.analyze('tomin')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tomin","details":{"morpheme":"tomin","type":"noun_stem","english":"coin","countable":true,"animate":false,"absolutiveSuffix":false}}],"englishTranslation":"(it is a) coin"}]}', 'tomin');
  assert.strictEqual(JSON.stringify(parser.analyze('nesi')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"nesi","details":{"morpheme":"nesi","type":"verb_stem","english":"seem"}}],"englishTranslation":"he/she/it seems"}]}', 'nesi');
  assert.strictEqual(JSON.stringify(parser.analyze('ehecatl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"eheca","details":{"morpheme":"eheca","type":"noun_stem","english":"wind","countable":false,"animate":false}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is) wind"}]}', 'ehecatl');
  assert.strictEqual(JSON.stringify(parser.analyze('hueyi')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"hueyi","details":{"morpheme":"hueyi","type":"adjective","english":"big"}}],"englishTranslation":"big"}]}', 'hueyi');
  assert.strictEqual(JSON.stringify(parser.analyze('yayahuic')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"yayahuic","details":{"morpheme":"yayahuic","type":"adjective","english":"black"}}],"englishTranslation":"black"}]}', 'yayahuic');
  assert.strictEqual(JSON.stringify(parser.analyze('ce')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ce","details":{"morpheme":"ce","type":"particle","english":"a, one"}}],"englishTranslation":"a, one"}]}', 'ce');
  assert.strictEqual(JSON.stringify(parser.analyze('chahuiztli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"chahuiz","details":{"morpheme":"chahuiz","type":"noun_stem","english":"fungus","countable":false,"animate":false}},{"morpheme":"tli","details":{"morpheme":"tli","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is) fungus"}]}', 'chahuiztli');
  assert.strictEqual(JSON.stringify(parser.analyze('xoxoctic')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"xoxoctic","details":{"morpheme":"xoxoctic","type":"adjective","english":"blue, green"}}],"englishTranslation":"blue, green"}]}', 'xoxoctic');
  assert.strictEqual(JSON.stringify(parser.analyze('tzapotl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tzapo","details":{"morpheme":"tzapo","type":"noun_stem","english":"sapote","countable":true,"animate":false}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) sapote"}]}', 'tzapotl');
  assert.strictEqual(JSON.stringify(parser.analyze('tlalli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tlal","details":{"morpheme":"tlal","type":"noun_stem","english":"land","countable":false,"animate":false}},{"morpheme":"li","details":{"morpheme":"li","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is) land"}]}', 'tlalli');
  assert.strictEqual(JSON.stringify(parser.analyze('cuahuitl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"cuahui","details":{"morpheme":"cuahui","type":"noun_stem","english":"tree","countable":true,"animate":false}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) tree"}]}', 'cuahuitl');
  assert.strictEqual(JSON.stringify(parser.analyze('yollo')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"yollo","details":{"morpheme":"yollo","type":"noun_stem","english":"heart","countable":true,"animate":true}}],"englishTranslation":"(it is a) heart"}]}', 'yollo');
  assert.strictEqual(JSON.stringify(parser.analyze('noteco')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"no","details":{"morpheme":"no","type":"prefix","role":"possessive","person":"first","number":"singular","english":"my","usedWith":"noun"}},{"morpheme":"teco","details":{"morpheme":"tecoh","type":"noun_stem","english":"lord","countable":true,"animate":true}}],"englishTranslation":"(it is) my lord"}]}', 'noteco');
  assert.strictEqual(JSON.stringify(parser.analyze('tonatiuh')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tonatiuh","details":{"morpheme":"tonatiuh","type":"noun_stem","english":"sun","countable":true,"animate":false,"absolutiveSuffix":false}}],"englishTranslation":"(it is a) sun"}]}', 'tonatiuh');
  assert.strictEqual(JSON.stringify(parser.analyze('nocniuh')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"no","details":{"morpheme":"no","type":"prefix","role":"possessive","person":"first","number":"singular","english":"my","usedWith":"noun"}},{"morpheme":"cniuh","details":{"morpheme":"icniuh","type":"noun_stem","english":"friend","countable":true,"animate":true}}],"englishTranslation":"(it is) my friend"}]}', 'nocniuh');
  assert.strictEqual(JSON.stringify(parser.analyze('necuhtli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"necuh","details":{"morpheme":"necuh","type":"noun_stem","english":"honey","countable":false,"animate":false}},{"morpheme":"tli","details":{"morpheme":"tli","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is) honey"}]}', 'necuhtli');
  assert.strictEqual(JSON.stringify(parser.analyze('nicnequi')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ni","details":{"morpheme":"ni","type":"prefix","role":"subject","person":"first","number":"singular","english":"I"}},{"morpheme":"c","details":{"morpheme":"c","type":"prefix","role":"object","person":"third","number":"singular","english":"him/her/it"}},{"morpheme":"nequi","details":{"morpheme":"nequi","type":"verb_stem","english":"want"}}],"englishTranslation":"I want him/her/it"}]}', 'nicnequi');
  assert.strictEqual(JSON.stringify(parser.analyze('niccaqui')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ni","details":{"morpheme":"ni","type":"prefix","role":"subject","person":"first","number":"singular","english":"I"}},{"morpheme":"c","details":{"morpheme":"c","type":"prefix","role":"object","person":"third","number":"singular","english":"him/her/it"}},{"morpheme":"caqui","details":{"morpheme":"caqui","type":"verb_stem","english":"hear","past":"heard","pp":"heard"}}],"englishTranslation":"I hear him/her/it"}]}', 'niccaqui');
  assert.strictEqual(JSON.stringify(parser.analyze('canin')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"canin","details":{"morpheme":"canin","type":"interrogative","english":"where"}}],"englishTranslation":"where"}]}', 'canin');
  assert.strictEqual(JSON.stringify(parser.analyze('mocauhqui')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"mocauhqui","details":{"morpheme":"mocauhqui","type":"noun_stem","english":"married person","englishPlural":"married people","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"(it is a) married person"}]}', 'mocauhqui');
  //assert.strictEqual(JSON.stringify(parser.analyze("quitzacqui")), ``, "quitzacqui");
  assert.strictEqual(JSON.stringify(parser.analyze('tlacualli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tla","details":{"morpheme":"tla","type":"prefix","role":"object","impliesSomething":true}},{"morpheme":"cua","details":{"morpheme":"cua","type":"verb_stem","english":"eat","past":"ate","pp":"eaten"}},{"morpheme":"lli","details":{"morpheme":"lli","type":"suffix","category":"participle","nominalizing":true,"countable":true}}],"englishTranslation":"(it is) something eaten"}]}', 'tlacualli');
  assert.strictEqual(JSON.stringify(parser.analyze('tecciztli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tecciz","details":{"morpheme":"tecciz","type":"noun_stem","english":"egg","countable":true,"animate":false}},{"morpheme":"tli","details":{"morpheme":"tli","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is an) egg"}]}', 'tecciztli');
  assert.strictEqual(JSON.stringify(parser.analyze('chichi')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"chichi","details":{"morpheme":"chichi","type":"noun_stem","english":"dog","countable":true,"animate":true}}],"englishTranslation":"(it is a) dog"}]}', 'chichi');
  assert.strictEqual(JSON.stringify(parser.analyze('notlacauh')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"no","details":{"morpheme":"no","type":"prefix","role":"possessive","person":"first","number":"singular","english":"my","usedWith":"noun"}},{"morpheme":"tlaca","details":{"morpheme":"tlaca","type":"noun_stem","english":"man","englishPlural":"men","countable":true,"animate":true}},{"morpheme":"uh","details":{"morpheme":"uh","type":"suffix","category":"possessive"}}],"englishTranslation":"(it is) my man"}]}', 'notlacauh');
  assert.strictEqual(JSON.stringify(parser.analyze('nocihuauh')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"no","details":{"morpheme":"no","type":"prefix","role":"possessive","person":"first","number":"singular","english":"my","usedWith":"noun"}},{"morpheme":"cihua","details":{"morpheme":"cihua","type":"noun_stem","english":"woman","englishPlural":"women","countable":true,"animate":true}},{"morpheme":"uh","details":{"morpheme":"uh","type":"suffix","category":"possessive"}}],"englishTranslation":"(it is) my woman"}]}', 'nocihuauh');
  assert.strictEqual(JSON.stringify(parser.analyze('tototl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"toto","details":{"morpheme":"toto","type":"noun_stem","english":"bird","countable":true,"animate":true}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) bird"}]}', 'tototl');
  assert.strictEqual(JSON.stringify(parser.analyze('quetzalcoatl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"quetzal","details":{"morpheme":"quetzal","type":"noun_stem","english":"quetzal feather","countable":true,"animate":false}},{"morpheme":"coa","details":{"morpheme":"coa","type":"noun_stem","english":"serpent","countable":true,"animate":true}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) quetzal feather-serpent"}]}', 'quetzalcoatl');
  assert.strictEqual(JSON.stringify(parser.analyze('cocolia')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"cocolia","details":{"morpheme":"cocolia","type":"verb_stem","english":"hate"}}],"englishTranslation":"he/she/it hates"}]}', 'cocolia');
  assert.strictEqual(JSON.stringify(parser.analyze('mococoa')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"mo","details":{"morpheme":"mo","type":"prefix","role":"reflexive","person":"third","number":"singular","english":"him/her/itself","usedWith":"verb"}},{"morpheme":"cocoa","details":{"morpheme":"cocoa","type":"verb_stem","english":"hurt","past":"hurt","pp":"hurt"}}],"englishTranslation":"he/she/it hurts him/her/itself"}]}', 'mococoa');
  assert.strictEqual(JSON.stringify(parser.analyze('coatl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"coa","details":{"morpheme":"coa","type":"noun_stem","english":"serpent","countable":true,"animate":true}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) serpent"}]}', 'coatl');
  assert.strictEqual(JSON.stringify(parser.analyze('niccohua')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ni","details":{"morpheme":"ni","type":"prefix","role":"subject","person":"first","number":"singular","english":"I"}},{"morpheme":"c","details":{"morpheme":"c","type":"prefix","role":"object","person":"third","number":"singular","english":"him/her/it"}},{"morpheme":"cohua","details":{"morpheme":"cohua","type":"verb_stem","english":"buy","past":"bought","pp":"bought"}}],"englishTranslation":"I buy him/her/it"}]}', 'niccohua');
  assert.strictEqual(JSON.stringify(parser.analyze('nimotlaloa')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ni","details":{"morpheme":"ni","type":"prefix","role":"subject","person":"first","number":"singular","english":"I"}},{"morpheme":"motlaloa","details":{"morpheme":"motlaloa","type":"verb_stem","english":"run","past":"ran","pp":"run"}}],"englishTranslation":"I run"}]}', 'nimotlaloa');
  assert.strictEqual(JSON.stringify(parser.analyze('tetiya')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tetiya","details":{"morpheme":"tetiya","type":"verb_stem","english":"harden"}}],"englishTranslation":"he/she/it hardens"}]}', 'tetiya');
  //assert.strictEqual(JSON.stringify(parser.analyze("nictequihuia")), ``, "nictequihuia");
  assert.strictEqual(JSON.stringify(parser.analyze('chichi')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"chichi","details":{"morpheme":"chichi","type":"noun_stem","english":"dog","countable":true,"animate":true}}],"englishTranslation":"(it is a) dog"}]}', 'chichi');
  assert.strictEqual(JSON.stringify(parser.analyze('tlatia')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tlatia","details":{"morpheme":"tlatia","type":"verb_stem","english":"burn"}}],"englishTranslation":"he/she/it burns"}]}', 'tlatia');
  assert.strictEqual(JSON.stringify(parser.analyze('toca')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"toca","details":{"morpheme":"toca","type":"verb_stem","english":"plant"}}],"englishTranslation":"he/she/it plants"},{"morphemes":[{"morpheme":"toca","details":{"morpheme":"toca","type":"noun_stem","english":"spider","countable":true,"animate":true}}],"englishTranslation":"(it is a) spider"}]}', 'toca');
  assert.strictEqual(JSON.stringify(parser.analyze('amo')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"amo","details":{"morpheme":"amo","type":"particle","english":"no, not"}}],"englishTranslation":"no, not"}]}', 'amo');
  assert.strictEqual(JSON.stringify(parser.analyze('quena')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"quena","details":{"morpheme":"quena","type":"particle","english":"yes"}}],"englishTranslation":"yes"}]}', 'quena');
  assert.strictEqual(JSON.stringify(parser.analyze('nanan')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"nanan","details":{"morpheme":"nanan","type":"noun_stem","english":"mother","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"(it is a) mother"}]}', 'nanan');
  assert.strictEqual(JSON.stringify(parser.analyze('tetic')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"te","details":{"morpheme":"te","type":"noun_stem","english":"stone","countable":true,"animate":false}},{"morpheme":"tic","details":{"morpheme":"tic","type":"suffix","category":"adjectivizer","englishSuffix":"-like"}}],"englishTranslation":"(it is a) stone"},{"morphemes":[{"morpheme":"t","details":{"morpheme":"t","type":"prefix","role":"subject","person":"first","number":"plural","english":"we"}},{"morpheme":"e","details":{"morpheme":"e","type":"noun_stem","english":"bean","countable":true,"animate":false}},{"morpheme":"tic","details":{"morpheme":"tic","type":"suffix","category":"adjectivizer","englishSuffix":"-like"}}],"englishTranslation":"we are a bean"},{"morphemes":[{"morpheme":"t","details":{"morpheme":"t","type":"prefix","role":"subject","person":"second","number":"singular","english":"you (sg)"}},{"morpheme":"e","details":{"morpheme":"e","type":"noun_stem","english":"bean","countable":true,"animate":false}},{"morpheme":"tic","details":{"morpheme":"tic","type":"suffix","category":"adjectivizer","englishSuffix":"-like"}}],"englishTranslation":"you (sg) are a bean"},{"morphemes":[{"morpheme":"t","details":{"morpheme":"t","type":"prefix","role":"possessive","person":"first","number":"plural","english":"our","usedWith":"noun"}},{"morpheme":"e","details":{"morpheme":"e","type":"noun_stem","english":"bean","countable":true,"animate":false}},{"morpheme":"tic","details":{"morpheme":"tic","type":"suffix","category":"adjectivizer","englishSuffix":"-like"}}],"englishTranslation":"(it is) our bean"}]}', 'tetic');
  assert.strictEqual(JSON.stringify(parser.analyze('noyollo')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"no","details":{"morpheme":"no","type":"prefix","role":"possessive","person":"first","number":"singular","english":"my","usedWith":"noun"}},{"morpheme":"yollo","details":{"morpheme":"yollo","type":"noun_stem","english":"heart","countable":true,"animate":true}}],"englishTranslation":"(it is) my heart"}]}', 'noyollo');
  assert.strictEqual(JSON.stringify(parser.analyze('nonantzin')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"no","details":{"morpheme":"no","type":"prefix","role":"possessive","person":"first","number":"singular","english":"my","usedWith":"noun"}},{"morpheme":"nan","details":{"morpheme":"nan","type":"noun_stem","english":"mother","countable":true,"animate":true,"absolutiveSuffix":false}},{"morpheme":"tzin","details":{"morpheme":"tzin","type":"suffix","category":"honorific","englishPrefix":"respected "}}],"englishTranslation":"(it is) my mother"}]}', 'nonantzin');
  assert.strictEqual(JSON.stringify(parser.analyze('tlayi')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tlayi","details":{"morpheme":"tlayi","type":"verb_stem","english":"till"}}],"englishTranslation":"he/she/it tills"}]}', 'tlayi');
  assert.strictEqual(JSON.stringify(parser.analyze('ahui')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ahui","details":{"morpheme":"ahui","type":"noun_stem","english":"aunt","countable":true,"animate":true}}],"englishTranslation":"(it is an) aunt"}]}', 'ahui');
  assert.strictEqual(JSON.stringify(parser.analyze('cihuatl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"cihua","details":{"morpheme":"cihua","type":"noun_stem","english":"woman","englishPlural":"women","countable":true,"animate":true}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) woman"}]}', 'cihuatl');
  assert.strictEqual(JSON.stringify(parser.analyze('cuahuitl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"cuahui","details":{"morpheme":"cuahui","type":"noun_stem","english":"tree","countable":true,"animate":false}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) tree"}]}', 'cuahuitl');
  assert.strictEqual(JSON.stringify(parser.analyze('tzahtzi')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tzahtzi","details":{"morpheme":"tzahtzi","type":"verb_stem","english":"shout"}}],"englishTranslation":"he/she/it shouts"}]}', 'tzahtzi');
  assert.strictEqual(JSON.stringify(parser.analyze('ahhua')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ahhua","details":{"morpheme":"ahhua","type":"verb_stem","english":"scold"}}],"englishTranslation":"he/she/it scolds"}]}', 'ahhua');
  //assert.strictEqual(JSON.stringify(parser.analyze("nechuitzin")), ``, "nechuitzin");
  //assert.strictEqual(JSON.stringify(parser.analyze("mochiuhtoc")), ``, "mochiuhtoc");
  assert.strictEqual(JSON.stringify(parser.analyze('tlazcamati')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tlazcamati","details":{"morpheme":"tlazcamati","type":"interjection","english":"thank you"}}],"englishTranslation":"thank you"}]}', 'tlazcamati');
  assert.strictEqual(JSON.stringify(parser.analyze('tlazohcamati')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tlazohcamati","details":{"morpheme":"tlazohcamati","type":"interjection","english":"thank you"}}],"englishTranslation":"thank you"}]}', 'tlazohcamati');
});

test('Modern vocabulary, set 2', () => {
  assert.strictEqual(JSON.stringify(parser.analyze('coyotl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"coyo","details":{"morpheme":"coyo","type":"noun_stem","english":"coyote","countable":true,"animate":true}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) coyote"}]}', 'coyotl');
  assert.strictEqual(JSON.stringify(parser.analyze('amatl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ama","details":{"morpheme":"ama","type":"noun_stem","english":"paper","countable":false,"animate":false}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is) paper"}]}', 'amatl');
  assert.strictEqual(JSON.stringify(parser.analyze('camohtli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"camoh","details":{"morpheme":"camoh","type":"noun_stem","english":"yam","countable":true,"animate":false}},{"morpheme":"tli","details":{"morpheme":"tli","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) yam"}]}', 'camohtli');
  assert.strictEqual(JSON.stringify(parser.analyze('pahtli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"pah","details":{"morpheme":"pah","type":"noun_stem","english":"medicine","countable":false,"animate":false}},{"morpheme":"tli","details":{"morpheme":"tli","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is) medicine"}]}', 'pahtli');
  assert.strictEqual(JSON.stringify(parser.analyze('calli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"cal","details":{"morpheme":"cal","type":"noun_stem","english":"house","countable":true,"animate":false}},{"morpheme":"li","details":{"morpheme":"li","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) house"}]}', 'calli');
  assert.strictEqual(JSON.stringify(parser.analyze('tamalli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"t","details":{"morpheme":"t","type":"prefix","role":"subject","person":"second","number":"singular","english":"you (sg)"}},{"morpheme":"ama","details":{"morpheme":"ama","type":"noun_stem","english":"paper","countable":false,"animate":false}},{"morpheme":"lli","details":{"morpheme":"lli","type":"suffix","category":"participle","nominalizing":true,"countable":true}}],"englishTranslation":"you (sg) are"},{"morphemes":[{"morpheme":"t","details":{"morpheme":"t","type":"prefix","role":"possessive","person":"first","number":"plural","english":"our","usedWith":"noun"}},{"morpheme":"ama","details":{"morpheme":"ama","type":"noun_stem","english":"paper","countable":false,"animate":false}},{"morpheme":"lli","details":{"morpheme":"lli","type":"suffix","category":"participle","nominalizing":true,"countable":true}}],"englishTranslation":"(it is) our"},{"morphemes":[{"morpheme":"tamal","details":{"morpheme":"tamal","type":"noun_stem","english":"tamal","englishPlural":"tamales","countable":true,"animate":false}},{"morpheme":"li","details":{"morpheme":"li","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) tamal"}]}', 'tamalli');
  assert.strictEqual(JSON.stringify(parser.analyze('citlalin')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"citlalin","details":{"morpheme":"citlalin","type":"noun_stem","english":"star","countable":true,"animate":false,"absolutiveSuffix":false}}],"englishTranslation":"(it is a) star"}]}', 'citlalin');
  assert.strictEqual(JSON.stringify(parser.analyze('michin')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"michin","details":{"morpheme":"michin","type":"noun_stem","english":"fish","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"(it is a) fish"}]}', 'michin');
  assert.strictEqual(JSON.stringify(parser.analyze('mizton')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"mizton","details":{"morpheme":"mizton","type":"noun_stem","english":"cat","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"(it is a) cat"}]}', 'mizton');
  assert.strictEqual(JSON.stringify(parser.analyze('cahuayoh')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"cahua","details":{"morpheme":"cahua","type":"verb_stem","english":"leave","past":"left","pp":"left"}},{"morpheme":"yoh","details":{"morpheme":"yoh","type":"suffix","category":"qualifier","englishPrefix":"full of "}}],"englishTranslation":"he/she/it leaves"},{"morphemes":[{"morpheme":"cahuayoh","details":{"morpheme":"cahuayoh","type":"noun_stem","english":"horse","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"(it is a) horse"}]}', 'cahuayoh');
  assert.strictEqual(JSON.stringify(parser.analyze('patox')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"patox","details":{"morpheme":"patox","type":"noun_stem","english":"duck","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"(it is a) duck"}]}', 'patox');
  assert.strictEqual(JSON.stringify(parser.analyze('nomichin')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"no","details":{"morpheme":"no","type":"prefix","role":"possessive","person":"first","number":"singular","english":"my","usedWith":"noun"}},{"morpheme":"michin","details":{"morpheme":"michin","type":"noun_stem","english":"fish","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"(it is) my fish"}]}', 'nomichin');
  assert.strictEqual(JSON.stringify(parser.analyze('michimeh')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"michi","details":{"morpheme":"michi","type":"noun_stem","english":"fish","countable":true,"animate":true}},{"morpheme":"meh","details":{"morpheme":"meh","type":"suffix","category":"plural"}}],"englishTranslation":"(they are) fishes"}]}', 'michimeh');
  assert.strictEqual(JSON.stringify(parser.analyze('tlalli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tlal","details":{"morpheme":"tlal","type":"noun_stem","english":"land","countable":false,"animate":false}},{"morpheme":"li","details":{"morpheme":"li","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is) land"}]}', 'tlalli');
  assert.strictEqual(JSON.stringify(parser.analyze('nemilistli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"nemilis","details":{"morpheme":"nemilis","type":"noun_stem","english":"life","countable":true,"animate":true}},{"morpheme":"tli","details":{"morpheme":"tli","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) life"}]}', 'nemilistli');
  assert.strictEqual(JSON.stringify(parser.analyze('cihuapil')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"cihua","details":{"morpheme":"cihua","type":"noun_stem","english":"woman","englishPlural":"women","countable":true,"animate":true}},{"morpheme":"pil","details":{"morpheme":"pil","type":"noun_stem","english":"noble","countable":true,"animate":true}}],"englishTranslation":"(it is a) woman-noble"}]}', 'cihuapil');
  assert.strictEqual(JSON.stringify(parser.analyze('cuapuertah')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"cuapuertah","details":{"morpheme":"cuapuertah","type":"noun_stem","english":"door","countable":true,"animate":false,"absolutiveSuffix":false}}],"englishTranslation":"(it is a) door"}]}', 'cuapuertah');
  assert.strictEqual(JSON.stringify(parser.analyze('tepostli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tepos","details":{"morpheme":"tepos","type":"noun_stem","english":"metal","countable":false,"animate":false}},{"morpheme":"tli","details":{"morpheme":"tli","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is) metal"}]}', 'tepostli');
  assert.strictEqual(JSON.stringify(parser.analyze('tlaltipactli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tlaltipac","details":{"morpheme":"tlaltipac","type":"noun_stem","english":"world","countable":true,"animate":false}},{"morpheme":"tli","details":{"morpheme":"tli","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) world"}]}', 'tlaltipactli');
  assert.strictEqual(JSON.stringify(parser.analyze('tlatsotsontli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tlatsotson","details":{"morpheme":"tlatsotson","type":"noun_stem","english":"music","countable":false,"animate":false}},{"morpheme":"tli","details":{"morpheme":"tli","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is) music"}]}', 'tlatsotsontli');
  assert.strictEqual(JSON.stringify(parser.analyze('macehualli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"macehual","details":{"morpheme":"macehual","type":"noun_stem","english":"person","englishPlural":"people","countable":true,"animate":true}},{"morpheme":"li","details":{"morpheme":"li","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) person"}]}', 'macehualli');
  assert.strictEqual(JSON.stringify(parser.analyze('coyomeh')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"coyo","details":{"morpheme":"coyo","type":"noun_stem","english":"coyote","countable":true,"animate":true}},{"morpheme":"meh","details":{"morpheme":"meh","type":"suffix","category":"plural"}}],"englishTranslation":"(they are) coyotes"}]}', 'coyomeh');
  assert.strictEqual(JSON.stringify(parser.analyze('miztonmeh')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"mizton","details":{"morpheme":"mizton","type":"noun_stem","english":"cat","countable":true,"animate":true,"absolutiveSuffix":false}},{"morpheme":"meh","details":{"morpheme":"meh","type":"suffix","category":"plural"}}],"englishTranslation":"(they are) cats"}]}', 'miztonmeh');
  assert.strictEqual(JSON.stringify(parser.analyze('macehualmeh')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"macehual","details":{"morpheme":"macehual","type":"noun_stem","english":"person","englishPlural":"people","countable":true,"animate":true}},{"morpheme":"meh","details":{"morpheme":"meh","type":"suffix","category":"plural"}}],"englishTranslation":"(they are) people"}]}', 'macehualmeh');
  assert.strictEqual(JSON.stringify(parser.analyze('chichimeh')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"chichi","details":{"morpheme":"chichi","type":"noun_stem","english":"dog","countable":true,"animate":true}},{"morpheme":"meh","details":{"morpheme":"meh","type":"suffix","category":"plural"}}],"englishTranslation":"(they are) dogs"}]}', 'chichimeh');
  assert.strictEqual(JSON.stringify(parser.analyze('ocuilimeh')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ocuili","details":{"morpheme":"ocuili","type":"noun_stem","english":"worm","countable":true,"animate":true}},{"morpheme":"meh","details":{"morpheme":"meh","type":"suffix","category":"plural"}}],"englishTranslation":"(they are) worms"}]}', 'ocuilimeh');
  //assert.strictEqual(JSON.stringify(parser.analyze("pantalon")), ``, "pantalon");
  assert.strictEqual(JSON.stringify(parser.analyze('tepetl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tepe","details":{"morpheme":"tepe","type":"noun_stem","english":"hill","countable":true,"animate":false}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) hill"}]}', 'tepetl');
  assert.strictEqual(JSON.stringify(parser.analyze('oquichpil')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"oquichpil","details":{"morpheme":"oquichpil","type":"noun_stem","english":"boy","countable":true,"animate":true}}],"englishTranslation":"(it is a) boy"},{"morphemes":[{"morpheme":"oquich","details":{"morpheme":"oquich","type":"noun_stem","english":"man","englishPlural":"men","countable":true,"animate":true}},{"morpheme":"pil","details":{"morpheme":"pil","type":"noun_stem","english":"noble","countable":true,"animate":true}}],"englishTranslation":"(it is a) man-noble"}]}', 'oquichpil');
  assert.strictEqual(JSON.stringify(parser.analyze('ocuilin')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ocuilin","details":{"morpheme":"ocuilin","type":"noun_stem","english":"worm","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"(it is a) worm"}]}', 'ocuilin');
  assert.strictEqual(JSON.stringify(parser.analyze('altepetl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"altepe","details":{"morpheme":"altepe","type":"noun_stem","english":"city","countable":true,"animate":false}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) city"}]}', 'altepetl');
  assert.strictEqual(JSON.stringify(parser.analyze('pitzotl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"pitzo","details":{"morpheme":"pitzo","type":"noun_stem","english":"pig","countable":true,"animate":true}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) pig"}]}', 'pitzotl');
  assert.strictEqual(JSON.stringify(parser.analyze('amoxtli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"amox","details":{"morpheme":"amox","type":"noun_stem","english":"book","countable":true,"animate":false}},{"morpheme":"tli","details":{"morpheme":"tli","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) book"}]}', 'amoxtli');
  assert.strictEqual(JSON.stringify(parser.analyze('tepetl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tepe","details":{"morpheme":"tepe","type":"noun_stem","english":"hill","countable":true,"animate":false}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) hill"}]}', 'tepetl');
  assert.strictEqual(JSON.stringify(parser.analyze('ce')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ce","details":{"morpheme":"ce","type":"particle","english":"a, one"}}],"englishTranslation":"a, one"}]}', 'ce');
  assert.strictEqual(JSON.stringify(parser.analyze('ome')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ome","details":{"morpheme":"ome","type":"numeral","english":"two"}}],"englishTranslation":"two"}]}', 'ome');
  assert.strictEqual(JSON.stringify(parser.analyze('eyi')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"eyi","details":{"morpheme":"eyi","type":"numeral","english":"three"}}],"englishTranslation":"three"}]}', 'eyi');
  assert.strictEqual(JSON.stringify(parser.analyze('nahui')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"n","details":{"morpheme":"n","type":"prefix","role":"subject","person":"first","number":"singular","english":"I"}},{"morpheme":"ahui","details":{"morpheme":"ahui","type":"noun_stem","english":"aunt","countable":true,"animate":true}}],"englishTranslation":"I am an aunt"},{"morphemes":[{"morpheme":"nahui","details":{"morpheme":"nahui","type":"numeral","english":"four"}}],"englishTranslation":"four"}]}', 'nahui');
  assert.strictEqual(JSON.stringify(parser.analyze('macuilli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"macuilli","details":{"morpheme":"macuilli","type":"numeral","english":"five"}}],"englishTranslation":"five"}]}', 'macuilli');
  assert.strictEqual(JSON.stringify(parser.analyze('chicuace')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"chicuace","details":{"morpheme":"chicuace","type":"numeral","english":"six"}}],"englishTranslation":"six"}]}', 'chicuace');
  assert.strictEqual(JSON.stringify(parser.analyze('chicome')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"chicome","details":{"morpheme":"chicome","type":"numeral","english":"seven"}}],"englishTranslation":"seven"}]}', 'chicome');
  assert.strictEqual(JSON.stringify(parser.analyze('chicueyi')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"chicueyi","details":{"morpheme":"chicueyi","type":"numeral","english":"eight"}}],"englishTranslation":"eight"}]}', 'chicueyi');
  assert.strictEqual(JSON.stringify(parser.analyze('chicnahui')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"chicnahui","details":{"morpheme":"chicnahui","type":"numeral","english":"nine"}}],"englishTranslation":"nine"}]}', 'chicnahui');
  assert.strictEqual(JSON.stringify(parser.analyze('mahtlactli')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"mahtlactli","details":{"morpheme":"mahtlactli","type":"numeral","english":"ten"}}],"englishTranslation":"ten"}]}', 'mahtlactli');
  assert.strictEqual(JSON.stringify(parser.analyze('nitlacatl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ni","details":{"morpheme":"ni","type":"prefix","role":"subject","person":"first","number":"singular","english":"I"}},{"morpheme":"tlaca","details":{"morpheme":"tlaca","type":"noun_stem","english":"man","englishPlural":"men","countable":true,"animate":true}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"I am a man"}]}', 'nitlacatl');
  assert.strictEqual(JSON.stringify(parser.analyze('titlacatl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ti","details":{"morpheme":"ti","type":"prefix","role":"subject","person":"second","number":"singular","english":"you (sg)"}},{"morpheme":"tlaca","details":{"morpheme":"tlaca","type":"noun_stem","english":"man","englishPlural":"men","countable":true,"animate":true}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"you (sg) are a man"}]}', 'titlacatl');
  assert.strictEqual(JSON.stringify(parser.analyze('titlacameh')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ti","details":{"morpheme":"ti","type":"prefix","role":"subject","person":"first","number":"plural","english":"we"}},{"morpheme":"tlaca","details":{"morpheme":"tlaca","type":"noun_stem","english":"man","englishPlural":"men","countable":true,"animate":true}},{"morpheme":"meh","details":{"morpheme":"meh","type":"suffix","category":"plural"}}],"englishTranslation":"we are men"}]}', 'titlacameh');
  assert.strictEqual(JSON.stringify(parser.analyze('intlacameh')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"in","details":{"morpheme":"in","type":"prefix","role":"possessive","person":"third","number":"plural","english":"their","usedWith":"noun"}},{"morpheme":"tlaca","details":{"morpheme":"tlaca","type":"noun_stem","english":"man","englishPlural":"men","countable":true,"animate":true}},{"morpheme":"meh","details":{"morpheme":"meh","type":"suffix","category":"plural"}}],"englishTranslation":"(they are) their men"}]}', 'intlacameh');
  assert.strictEqual(JSON.stringify(parser.analyze('tlacameh')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"tlaca","details":{"morpheme":"tlaca","type":"noun_stem","english":"man","englishPlural":"men","countable":true,"animate":true}},{"morpheme":"meh","details":{"morpheme":"meh","type":"suffix","category":"plural"}}],"englishTranslation":"(they are) men"}]}', 'tlacameh');
  assert.strictEqual(JSON.stringify(parser.analyze('maxochitl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"maxochi","details":{"morpheme":"maxochi","type":"noun_stem","english":"gay man","englishPlural":"gay men","countable":true,"animate":true}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) gay man"}]}', 'maxochitl');
  assert.strictEqual(JSON.stringify(parser.analyze('telpocatl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"telpoca","details":{"morpheme":"telpoca","type":"noun_stem","english":"teen boy","countable":true,"animate":true}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) teen boy"}]}', 'telpocatl');
  assert.strictEqual(JSON.stringify(parser.analyze('ichpocatl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ichpoca","details":{"morpheme":"ichpoca","type":"noun_stem","english":"teen girl","countable":true,"animate":true}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) teen girl"}]}', 'ichpocatl');
  //assert.strictEqual(JSON.stringify(parser.analyze("momachtianih")), ``, "momachtianih");
  //assert.strictEqual(JSON.stringify(parser.analyze("momachtihquetl")), ``, "momachtihquetl");
  assert.strictEqual(JSON.stringify(parser.analyze('papalotl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"papalo","details":{"morpheme":"papalo","type":"noun_stem","english":"butterfly","countable":true,"animate":true,"absolutiveSuffix":false}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) butterfly"}]}', 'papalotl');
  assert.strictEqual(JSON.stringify(parser.analyze('ayotl')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"ayo","details":{"morpheme":"ayo","type":"noun_stem","english":"turtle","countable":true,"animate":true}},{"morpheme":"tl","details":{"morpheme":"tl","type":"suffix","category":"absolutive","nominalizing":true,"countable":true}}],"englishTranslation":"(it is a) turtle"}]}', 'ayotl');
  assert.strictEqual(JSON.stringify(parser.analyze('inin')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"inin","details":{"morpheme":"inin","type":"particle","english":"this"}}],"englishTranslation":"this"}]}', 'inin');
  assert.strictEqual(JSON.stringify(parser.analyze('inon')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"inon","details":{"morpheme":"inon","type":"particle","english":"that"}}],"englishTranslation":"that"}]}', 'inon');
  assert.strictEqual(JSON.stringify(parser.analyze('zayolin')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"zayolin","details":{"morpheme":"zayolin","type":"noun_stem","english":"fly","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"(it is a) fly"}]}', 'zayolin');
  assert.strictEqual(JSON.stringify(parser.analyze('cuecuetztzin')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"cuecuetztzin","details":{"morpheme":"cuecuetztzin","type":"adjective","english":"small"}}],"englishTranslation":"small"}]}', 'cuecuetztzin');
  assert.strictEqual(JSON.stringify(parser.analyze('namantzin')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"namantzin","details":{"morpheme":"namantzin","type":"adverb","english":"now"}}],"englishTranslation":"now"}]}', 'namantzin');
  assert.strictEqual(JSON.stringify(parser.analyze('piyo')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"piyo","details":{"morpheme":"piyo","type":"noun_stem","english":"chicken","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"(it is a) chicken"}]}', 'piyo');
  assert.strictEqual(JSON.stringify(parser.analyze('huacax')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"huacax","details":{"morpheme":"huacax","type":"noun_stem","english":"cow","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"(it is a) cow"}]}', 'huacax');
  assert.strictEqual(JSON.stringify(parser.analyze('toroh')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"toroh","details":{"morpheme":"toroh","type":"noun_stem","english":"bull","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"(it is a) bull"}]}', 'toroh');
  assert.strictEqual(JSON.stringify(parser.analyze('cuatochin')), '{"success":true,"parsings":[{"morphemes":[{"morpheme":"cuatochin","details":{"morpheme":"cuatochin","type":"noun_stem","english":"rabbit","countable":true,"animate":true,"absolutiveSuffix":false}}],"englishTranslation":"(it is a) rabbit"}]}', 'cuatochin');
});